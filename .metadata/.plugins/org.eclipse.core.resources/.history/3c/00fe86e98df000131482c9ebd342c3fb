#include "fann.h"
#include "ImageConverter.h"
#include "NeuralNetRes.h"
#include <opencv2/core/core_c.h>
#include <opencv2/highgui/highgui_c.h>

int main()
{
	IplImage* img = 0;
	int height,width,step,channels;
	uchar *data;
	int i,j,k;


	// load an image
	img=cvLoadImage("../images/00/00000.ppm", CV_LOAD_IMAGE_COLOR);
	if(!img){
	printf("Could not load image file: %s\n", "../images/00/00000.ppm");
	exit(0);
	}

	// get the image data
	height    = img->height;
	width     = img->width;
	step      = img->widthStep;
	channels  = img->nChannels;
	data      = (uchar *)img->imageData;
	printf("Processing a %dx%d image with %d channels\n",height,width,channels);

	// invert the image
	//for(i=0;i<height;i++) for(j=0;j<width;j++) for(k=0;k<channels;k++)
	//  data[i*step+j*channels+k]=255-data[i*step+j*channels+k];

//	struct featureList* fList;
//
//	fList = createDataset();
//	printf("---sets created---\n");
//
////	const char * learn_file_name = "../dataset/train.txt";
////	const char * net_file_name = "tde.net";
//	unsigned int layers[4] = {3072, 3072, 3072, 43};
//	const float desired_error = (const float) 0.001;
//	const unsigned int max_epochs = 500;
//	const unsigned int epochs_between_reports = 1;
//
//	struct fann *ann = fann_create_standard_array(4,layers);
//
//	fann_train_on_file(ann, "../dataset/train.txt", max_epochs, epochs_between_reports, desired_error);
//
//	fann_save(ann, "tde.net");
//
//	fann_destroy(ann);
//
//
//
//	printf("---Learning Finished---\n");
//
//	testNet(fList,43, 3072);
//
    return 0;
}
